//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FireControl.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FireControl.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Null window is not valid at this point..
        /// </summary>
        internal static string LaunchWindowViewModel_WindowMustBeValid {
            get {
                return ResourceManager.GetString("LaunchWindowViewModel_WindowMustBeValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proposed shellstar is already attached or is null..
        /// </summary>
        internal static string ShellstarModel_AttachCounterfireShellstar_InvalidOrNull {
            get {
                return ResourceManager.GetString("ShellstarModel_AttachCounterfireShellstar_InvalidOrNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Counterfire shellstar is not attached to this shellstar or is null.
        /// </summary>
        internal static string ShellstarModel_DetachCounterfireShellstar_InvalidOrNull {
            get {
                return ResourceManager.GetString("ShellstarModel_DetachCounterfireShellstar_InvalidOrNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shellstar impulse track is null or emprty.
        /// </summary>
        internal static string ShellstarModel_ValidateShellstar_ImpusleTrackNullOrEmpty {
            get {
                return ResourceManager.GetString("ShellstarModel_ValidateShellstar_ImpusleTrackNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bearing to the target could not be calculated unambiguously because the program doesn&apos;t track time (you can wind back the turn counter). Please verify that the target bearing was calculated correctly according to D2.16. If you see window A(Ember) selected it may be due to both attacker and target velocity is zero or equal..
        /// </summary>
        internal static string TargetingAvidViewModel_BearingVerificationMessage {
            get {
                return ResourceManager.GetString("TargetingAvidViewModel_BearingVerificationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verify Bearing.
        /// </summary>
        internal static string TargetingAvidViewModel_VerifyBearingCaption {
            get {
                return ResourceManager.GetString("TargetingAvidViewModel_VerifyBearingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add a null model to the list or a model with no name..
        /// </summary>
        internal static string UnitListModel_AddUnit_MustHaveName {
            get {
                return ResourceManager.GetString("UnitListModel_AddUnit_MustHaveName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unit already has this shellstar attached..
        /// </summary>
        internal static string UnitModel_AttachShellstar_AlreadyExists {
            get {
                return ResourceManager.GetString("UnitModel_AttachShellstar_AlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unit does not have this shellstar attached..
        /// </summary>
        internal static string UnitModel_DetachShellstar_DoesNotExsit {
            get {
                return ResourceManager.GetString("UnitModel_DetachShellstar_DoesNotExsit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected context type..
        /// </summary>
        internal static string WindowSelectionViewModel_Unexpected_context_type {
            get {
                return ResourceManager.GetString("WindowSelectionViewModel_Unexpected_context_type", resourceCulture);
            }
        }
    }
}
